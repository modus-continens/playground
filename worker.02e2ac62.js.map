{"mappings":"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","sources":["pkg/modus_playground.js","node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","node_modules/@parcel/runtime-js/lib/helpers/bundle-url.js","node_modules/@parcel/runtime-js/lib/runtime-7e094a4f41474b41.js","node_modules/@parcel/runtime-js/lib/runtime-b5ee385bd158c29d.js","node_modules/ansicolor/ansicolor.js","src/worker.js"],"sourcesContent":["\nlet wasm;\n\nlet cachedTextDecoder = new TextDecoder('utf-8', { ignoreBOM: true, fatal: true });\n\ncachedTextDecoder.decode();\n\nlet cachegetUint8Memory0 = null;\nfunction getUint8Memory0() {\n    if (cachegetUint8Memory0 === null || cachegetUint8Memory0.buffer !== wasm.memory.buffer) {\n        cachegetUint8Memory0 = new Uint8Array(wasm.memory.buffer);\n    }\n    return cachegetUint8Memory0;\n}\n\nfunction getStringFromWasm0(ptr, len) {\n    return cachedTextDecoder.decode(getUint8Memory0().subarray(ptr, ptr + len));\n}\n\nconst heap = new Array(32).fill(undefined);\n\nheap.push(undefined, null, true, false);\n\nlet heap_next = heap.length;\n\nfunction addHeapObject(obj) {\n    if (heap_next === heap.length) heap.push(heap.length + 1);\n    const idx = heap_next;\n    heap_next = heap[idx];\n\n    heap[idx] = obj;\n    return idx;\n}\n\nlet cachegetInt32Memory0 = null;\nfunction getInt32Memory0() {\n    if (cachegetInt32Memory0 === null || cachegetInt32Memory0.buffer !== wasm.memory.buffer) {\n        cachegetInt32Memory0 = new Int32Array(wasm.memory.buffer);\n    }\n    return cachegetInt32Memory0;\n}\n\nlet cachegetUint32Memory0 = null;\nfunction getUint32Memory0() {\n    if (cachegetUint32Memory0 === null || cachegetUint32Memory0.buffer !== wasm.memory.buffer) {\n        cachegetUint32Memory0 = new Uint32Array(wasm.memory.buffer);\n    }\n    return cachegetUint32Memory0;\n}\n\nfunction getObject(idx) { return heap[idx]; }\n\nfunction dropObject(idx) {\n    if (idx < 36) return;\n    heap[idx] = heap_next;\n    heap_next = idx;\n}\n\nfunction takeObject(idx) {\n    const ret = getObject(idx);\n    dropObject(idx);\n    return ret;\n}\n\nfunction getArrayJsValueFromWasm0(ptr, len) {\n    const mem = getUint32Memory0();\n    const slice = mem.subarray(ptr / 4, ptr / 4 + len);\n    const result = [];\n    for (let i = 0; i < slice.length; i++) {\n        result.push(takeObject(slice[i]));\n    }\n    return result;\n}\n\nlet WASM_VECTOR_LEN = 0;\n\nlet cachedTextEncoder = new TextEncoder('utf-8');\n\nconst encodeString = (typeof cachedTextEncoder.encodeInto === 'function'\n    ? function (arg, view) {\n    return cachedTextEncoder.encodeInto(arg, view);\n}\n    : function (arg, view) {\n    const buf = cachedTextEncoder.encode(arg);\n    view.set(buf);\n    return {\n        read: arg.length,\n        written: buf.length\n    };\n});\n\nfunction passStringToWasm0(arg, malloc, realloc) {\n\n    if (realloc === undefined) {\n        const buf = cachedTextEncoder.encode(arg);\n        const ptr = malloc(buf.length);\n        getUint8Memory0().subarray(ptr, ptr + buf.length).set(buf);\n        WASM_VECTOR_LEN = buf.length;\n        return ptr;\n    }\n\n    let len = arg.length;\n    let ptr = malloc(len);\n\n    const mem = getUint8Memory0();\n\n    let offset = 0;\n\n    for (; offset < len; offset++) {\n        const code = arg.charCodeAt(offset);\n        if (code > 0x7F) break;\n        mem[ptr + offset] = code;\n    }\n\n    if (offset !== len) {\n        if (offset !== 0) {\n            arg = arg.slice(offset);\n        }\n        ptr = realloc(ptr, len, len = offset + arg.length * 3);\n        const view = getUint8Memory0().subarray(ptr + offset, ptr + len);\n        const ret = encodeString(arg, view);\n\n        offset += ret.written;\n    }\n\n    WASM_VECTOR_LEN = offset;\n    return ptr;\n}\n/**\n* @param {string} mf_source\n* @param {string} goal\n* @returns {ModusResult}\n*/\nexport function get_proof_tree(mf_source, goal) {\n    var ptr0 = passStringToWasm0(mf_source, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    var ptr1 = passStringToWasm0(goal, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len1 = WASM_VECTOR_LEN;\n    var ret = wasm.get_proof_tree(ptr0, len0, ptr1, len1);\n    return ModusResult.__wrap(ret);\n}\n\n/**\n*/\nexport class ModusResult {\n\n    static __wrap(ptr) {\n        const obj = Object.create(ModusResult.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_modusresult_free(ptr);\n    }\n    /**\n    */\n    get success() {\n        var ret = wasm.__wbg_get_modusresult_success(this.ptr);\n        return ret !== 0;\n    }\n    /**\n    * @param {boolean} arg0\n    */\n    set success(arg0) {\n        wasm.__wbg_set_modusresult_success(this.ptr, arg0);\n    }\n    /**\n    * @returns {string}\n    */\n    get get_errors() {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.modusresult_get_errors(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            return getStringFromWasm0(r0, r1);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n            wasm.__wbindgen_free(r0, r1);\n        }\n    }\n    /**\n    * @returns {any[]}\n    */\n    get get_proofs() {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.modusresult_get_proofs(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var v0 = getArrayJsValueFromWasm0(r0, r1).slice();\n            wasm.__wbindgen_free(r0, r1 * 4);\n            return v0;\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n}\n\nasync function load(module, imports) {\n    if (typeof Response === 'function' && module instanceof Response) {\n        if (typeof WebAssembly.instantiateStreaming === 'function') {\n            try {\n                return await WebAssembly.instantiateStreaming(module, imports);\n\n            } catch (e) {\n                if (module.headers.get('Content-Type') != 'application/wasm') {\n                    console.warn(\"`WebAssembly.instantiateStreaming` failed because your server does not serve wasm with `application/wasm` MIME type. Falling back to `WebAssembly.instantiate` which is slower. Original error:\\n\", e);\n\n                } else {\n                    throw e;\n                }\n            }\n        }\n\n        const bytes = await module.arrayBuffer();\n        return await WebAssembly.instantiate(bytes, imports);\n\n    } else {\n        const instance = await WebAssembly.instantiate(module, imports);\n\n        if (instance instanceof WebAssembly.Instance) {\n            return { instance, module };\n\n        } else {\n            return instance;\n        }\n    }\n}\n\nasync function init(input) {\n    if (typeof input === 'undefined') {\n        input = new URL('modus_playground_bg.wasm', import.meta.url);\n    }\n    const imports = {};\n    imports.wbg = {};\n    imports.wbg.__wbindgen_string_new = function(arg0, arg1) {\n        var ret = getStringFromWasm0(arg0, arg1);\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbindgen_throw = function(arg0, arg1) {\n        throw new Error(getStringFromWasm0(arg0, arg1));\n    };\n\n    if (typeof input === 'string' || (typeof Request === 'function' && input instanceof Request) || (typeof URL === 'function' && input instanceof URL)) {\n        input = fetch(input);\n    }\n\n\n\n    const { instance, module } = await load(await input, imports);\n\n    wasm = instance.exports;\n    init.__wbindgen_wasm_module = module;\n\n    return wasm;\n}\n\nexport default init;\n\n","\"use strict\";\n\nvar mapping = {};\n\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\n\nfunction resolve(id) {\n  var resolved = mapping[id];\n\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n\n  return resolved;\n}\n\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","\"use strict\";\n\nvar bundleURL = {};\n\nfunction getBundleURLCached(id) {\n  var value = bundleURL[id];\n\n  if (!value) {\n    value = getBundleURL();\n    bundleURL[id] = value;\n  }\n\n  return value;\n}\n\nfunction getBundleURL() {\n  try {\n    throw new Error();\n  } catch (err) {\n    var matches = ('' + err.stack).match(/(https?|file|ftp):\\/\\/[^)\\n]+/g);\n\n    if (matches) {\n      // The first two stack frames will be this function and getBundleURLCached.\n      // Use the 3rd one, which will be a runtime in the original bundle.\n      return getBaseURL(matches[2]);\n    }\n  }\n\n  return '/';\n}\n\nfunction getBaseURL(url) {\n  return ('' + url).replace(/^((?:https?|file|ftp):\\/\\/.+)\\/[^/]+$/, '$1') + '/';\n} // TODO: Replace uses with `new URL(url).origin` when ie11 is no longer supported.\n\n\nfunction getOrigin(url) {\n  var matches = ('' + url).match(/(https?|file|ftp):\\/\\/[^/]+/);\n\n  if (!matches) {\n    throw new Error('Origin not found');\n  }\n\n  return matches[0];\n}\n\nexports.getBundleURL = getBundleURLCached;\nexports.getBaseURL = getBaseURL;\nexports.getOrigin = getOrigin;","require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"g5kKs\\\":\\\"worker.02e2ac62.js\\\",\\\"1akT1\\\":\\\"modus_playground_bg.56f45dc8.wasm\\\"}\"));","module.exports = require('./helpers/bundle-url').getBundleURL('g5kKs') + require('./helpers/bundle-manifest').resolve(\"1akT1\");","\"use strict\";\n\n/*  ------------------------------------------------------------------------ */\n\nconst O = Object\n\n/*  See https://misc.flogisoft.com/bash/tip_colors_and_formatting\n    ------------------------------------------------------------------------ */\n\nconst colorCodes      = [   'black',      'red',      'green',      'yellow',      'blue',      'magenta',      'cyan', 'lightGray', '', 'default']\n    , colorCodesLight = ['darkGray', 'lightRed', 'lightGreen', 'lightYellow', 'lightBlue', 'lightMagenta', 'lightCyan', 'white', '']\n    \n    , styleCodes = ['', 'bright', 'dim', 'italic', 'underline', '', '', 'inverse']\n\n    , asBright = { 'red':       'lightRed',\n                   'green':     'lightGreen',\n                   'yellow':    'lightYellow',\n                   'blue':      'lightBlue',\n                   'magenta':   'lightMagenta',\n                   'cyan':      'lightCyan',\n                   'black':     'darkGray',\n                   'lightGray': 'white' }\n    \n    , types = { 0:  'style',\n                2:  'unstyle',\n                3:  'color',\n                9:  'colorLight',\n                4:  'bgColor',\n                10: 'bgColorLight' }\n\n    , subtypes = {  color:         colorCodes,\n                    colorLight:    colorCodesLight,\n                    bgColor:       colorCodes,\n                    bgColorLight:  colorCodesLight,\n                    style:         styleCodes,\n                    unstyle:       styleCodes    }\n\n/*  ------------------------------------------------------------------------ */\n\nconst clean = obj => {\n                for (const k in obj) { if (!obj[k]) { delete obj[k] } }\n                return (O.keys (obj).length === 0) ? undefined : obj\n            }\n\n/*  ------------------------------------------------------------------------ */\n\nclass Color {\n\n    constructor (background, name, brightness) {\n\n        this.background = background\n        this.name       = name\n        this.brightness = brightness\n    }\n\n    get inverse () {\n        return new Color (!this.background, this.name || (this.background ? 'black' : 'white'), this.brightness)\n    }\n\n    get clean () {\n        return clean ({ name:   this.name === 'default' ? '' : this.name,\n                        bright: this.brightness === Code.bright,\n                        dim:    this.brightness === Code.dim })\n    }\n\n    defaultBrightness (value) {\n\n        return new Color (this.background, this.name, this.brightness || value)\n    }\n\n    css (inverted) {\n\n        const color = inverted ? this.inverse : this\n\n        const rgbName = ((color.brightness === Code.bright) && asBright[color.name]) || color.name\n\n        const prop = (color.background ? 'background:' : 'color:')\n            , rgb  = Colors.rgb[rgbName]\n            , alpha = (this.brightness === Code.dim) ? 0.5 : 1\n\n        return rgb\n                ? (prop + 'rgba(' + [...rgb, alpha].join (',') + ');')\n                : ((!color.background && (alpha < 1)) ? 'color:rgba(0,0,0,0.5);' : '') // Chrome does not support 'opacity' property...\n    }\n}\n\n/*  ------------------------------------------------------------------------ */\n\nclass Code {\n\n    constructor (n) {\n        if (n !== undefined) { this.value = Number (n) } }\n\n    get type () {\n       return types[Math.floor (this.value / 10)] }\n\n    get subtype () {\n        return subtypes[this.type][this.value % 10] }\n\n    get str () {\n        return (this.value ? ('\\u001b\\[' + this.value + 'm') : '') }\n\n    static str (x) {\n        return new Code (x).str }\n\n    get isBrightness () {\n        return (this.value === Code.noBrightness) || (this.value === Code.bright) || (this.value === Code.dim) }\n}\n\n/*  ------------------------------------------------------------------------ */\n\nO.assign (Code, {\n\n    reset:        0,\n    bright:       1,\n    dim:          2,\n    inverse:      7,\n    noBrightness: 22,\n    noItalic:     23,\n    noUnderline:  24,\n    noInverse:    27,\n    noColor:      39,\n    noBgColor:    49\n})\n\n/*  ------------------------------------------------------------------------ */\n\nconst replaceAll = (str, a, b) => str.split (a).join (b)\n\n/*  ANSI brightness codes do not overlap, e.g. \"{bright}{dim}foo\" will be rendered bright (not dim).\n    So we fix it by adding brightness canceling before each brightness code, so the former example gets\n    converted to \"{noBrightness}{bright}{noBrightness}{dim}foo\" – this way it gets rendered as expected.\n */\n\nconst denormalizeBrightness = s => s.replace (/(\\u001b\\[(1|2)m)/g, '\\u001b[22m$1')\nconst normalizeBrightness = s => s.replace (/\\u001b\\[22m(\\u001b\\[(1|2)m)/g, '$1')\n\nconst wrap = (x, openCode, closeCode) => {\n\n    const open  = Code.str (openCode),\n          close = Code.str (closeCode)\n\n    return String (x)\n                .split ('\\n')\n                .map (line => denormalizeBrightness (open + replaceAll (normalizeBrightness (line), close, open) + close))\n                .join ('\\n')\n}\n\n/*  ------------------------------------------------------------------------ */\n\nconst camel = (a, b) => a + b.charAt (0).toUpperCase () + b.slice (1)\n\n\nconst stringWrappingMethods = (() => [\n\n        ...colorCodes.map ((k, i) => !k ? [] : [ // color methods\n\n            [k,               30 + i, Code.noColor],\n            [camel ('bg', k), 40 + i, Code.noBgColor],\n        ]),\n\n        ...colorCodesLight.map ((k, i) => !k ? [] : [ // light color methods\n            \n            [k,                90 + i, Code.noColor],\n            [camel ('bg', k), 100 + i, Code.noBgColor],\n        ]),\n\n        /* THIS ONE IS FOR BACKWARDS COMPATIBILITY WITH PREVIOUS VERSIONS (had 'bright' instead of 'light' for backgrounds)\n         */\n        ...['', 'BrightRed', 'BrightGreen', 'BrightYellow', 'BrightBlue', 'BrightMagenta', 'BrightCyan'].map ((k, i) => !k ? [] : [\n            \n            ['bg' + k, 100 + i, Code.noBgColor],\n        ]),\n        \n        ...styleCodes.map ((k, i) => !k ? [] : [ // style methods\n\n            [k, i, ((k === 'bright') || (k === 'dim')) ? Code.noBrightness : (20 + i)]\n        ])\n    ]\n    .reduce ((a, b) => a.concat (b))\n    \n) ();\n\n/*  ------------------------------------------------------------------------ */\n\nconst assignStringWrappingAPI = (target, wrapBefore = target) =>\n\n    stringWrappingMethods.reduce ((memo, [k, open, close]) =>\n                                        O.defineProperty (memo, k, {\n                                            get: () => assignStringWrappingAPI (str => wrapBefore (wrap (str, open, close)))\n                                        }),\n\n                                  target)\n\n/*  ------------------------------------------------------------------------ */\n\nconst TEXT    = 0,\n      BRACKET = 1,\n      CODE    = 2\n\nfunction rawParse (s) {\n    \n    let state = TEXT, buffer = '', text = '', code = '', codes = []\n    let spans = []\n\n    for (let i = 0, n = s.length; i < n; i++) {\n\n        const c = s[i]\n\n        buffer += c\n\n        switch (state) {\n\n            case TEXT:\n                if (c === '\\u001b') { state = BRACKET; buffer = c; }\n                else                { text += c }\n                break\n\n            case BRACKET:\n                if (c === '[') { state = CODE; code = ''; codes = [] }\n                else           { state = TEXT; text += buffer }\n                break\n\n            case CODE:\n\n                if ((c >= '0') && (c <= '9')) { code += c }\n                else if (c === ';')           { codes.push (new Code (code)); code = '' }\n                else if ((c === 'm'))         { code = code || '0'\n                                                codes.push (new Code (code))\n                                                for (const code of codes) { spans.push ({ text, code }); text = '' }\n                                                state = TEXT\n                                              }\n                else                          { state = TEXT; text += buffer }\n        }\n    }\n\n    if (state !== TEXT) text += buffer\n\n    if (text) spans.push ({ text, code: new Code () })\n\n    return spans\n}\n\n/*  ------------------------------------------------------------------------ */\n\n/**\n * Represents an ANSI-escaped string.\n */\nclass Colors {\n\n    /**\n     * @param {string} s a string containing ANSI escape codes.\n     */\n    constructor (s) {\n\n        this.spans = s ? rawParse (s) : []\n    }\n\n    get str () {\n        return this.spans.reduce ((str, p) => str + p.text + p.code.str, '')\n    }\n\n    get parsed () {\n\n        let color, bgColor, brightness, styles\n\n        function reset () {\n\n            color      = new Color (),\n            bgColor    = new Color (true /* background */),\n            brightness = undefined,\n            styles     = new Set ()\n        }\n\n        reset ()\n\n        return O.assign (new Colors (), {\n\n            spans: this.spans.map (span => {\n\n                const c = span.code\n\n                const inverted  = styles.has ('inverse'),\n                      underline = styles.has ('underline')   ? 'text-decoration: underline;' : '',                      \n                      italic    = styles.has ('italic')      ? 'font-style: italic;' : '',\n                      bold      = brightness === Code.bright ? 'font-weight: bold;' : ''\n\n                const foreColor = color.defaultBrightness (brightness)\n\n                const styledSpan = O.assign (\n                                        { css: bold + italic + underline + foreColor.css (inverted) + bgColor.css (inverted) },\n                                        clean ({ bold: !!bold, color: foreColor.clean, bgColor: bgColor.clean }),\n                                        span)\n\n                for (const k of styles) { styledSpan[k] = true }\n\n                if (c.isBrightness) {\n\n                    brightness = c.value\n                \n                } else if (span.code.value !== undefined) {\n\n                    if (span.code.value === Code.reset) {\n                        reset ()\n\n                    } else {\n\n                        switch (span.code.type) {\n\n                            case 'color'        :\n                            case 'colorLight'   : color   = new Color (false, c.subtype); break\n\n                            case 'bgColor'      :\n                            case 'bgColorLight' : bgColor = new Color (true,  c.subtype); break\n\n                            case 'style'  : styles.add    (c.subtype); break\n                            case 'unstyle': styles.delete (c.subtype); break\n                        }\n                    }\n                }\n\n                return styledSpan\n\n            }).filter (s => s.text.length > 0)\n        })\n    }\n\n/*  Outputs with Chrome DevTools-compatible format     */\n\n    get asChromeConsoleLogArguments () {\n\n        const spans = this.parsed.spans\n\n        return [spans.map (s => ('%c' + s.text)).join (''),\n             ...spans.map (s => s.css)]\n    }\n\n    get browserConsoleArguments () /* LEGACY, DEPRECATED */ { return this.asChromeConsoleLogArguments }\n\n    /**\n     * @desc installs String prototype extensions\n     * @example\n     * require ('ansicolor').nice\n     * console.log ('foo'.bright.red)\n     */\n    static get nice () {\n\n        Colors.names.forEach (k => {\n            if (!(k in String.prototype)) {\n                O.defineProperty (String.prototype, k, { get: function () { return Colors[k] (this) } })\n            }\n        })\n\n        return Colors\n    }\n\n    /**\n     * @desc parses a string containing ANSI escape codes\n     * @return {Colors} parsed representation.\n     */\n    static parse (s) {\n        return new Colors (s).parsed\n    }\n\n    /**\n     * @desc strips ANSI codes from a string\n     * @param {string} s a string containing ANSI escape codes.\n     * @return {string} clean string.\n     */\n    static strip (s) {\n        return s.replace (/[\\u001b\\u009b][[()#;?]*(?:[0-9]{1,4}(?:;[0-9]{0,4})*)?[0-9A-PRZcf-nqry=><]/g, '') // hope V8 caches the regexp\n    }\n\n    /**\n     * @desc checks if a value contains ANSI escape codes\n     * @param {any} s value to check\n     * @return {boolean} has codes\n     */\n     static isEscaped (s) {\n        s = String(s)\n        return Colors.strip (s) !== s;\n    }\n\n    /**\n     * @example\n     * const spans = [...ansi.parse ('\\u001b[7m\\u001b[7mfoo\\u001b[7mbar\\u001b[27m')]\n     */\n    [Symbol.iterator] () {\n        return this.spans[Symbol.iterator] ()\n    }\n\n    /**\n     * @desc This allows an alternative import style, see https://github.com/xpl/ansicolor/issues/7#issuecomment-578923578\n     * @example\n     * import { ansicolor, ParsedSpan } from 'ansicolor'\n     */\n    static get ansicolor () {\n        return Colors\n    }\n}\n\n/*  ------------------------------------------------------------------------ */\n\nassignStringWrappingAPI (Colors, str => str)\n\n/*  ------------------------------------------------------------------------ */\n\nColors.names = stringWrappingMethods.map (([k]) => k)\n\n/*  ------------------------------------------------------------------------ */\n\nColors.rgb = {\n\n    black:        [0,     0,   0],    \n    darkGray:     [100, 100, 100],\n    lightGray:    [200, 200, 200],\n    white:        [255, 255, 255],\n\n    red:          [204,   0,   0],\n    lightRed:     [255,  51,   0],\n    \n    green:        [0,   204,   0],\n    lightGreen:   [51,  204,  51],\n    \n    yellow:       [204, 102,   0],\n    lightYellow:  [255, 153,  51],\n    \n    blue:         [0,     0, 255],\n    lightBlue:    [26,  140, 255],\n    \n    magenta:      [204,   0, 204],\n    lightMagenta: [255,   0, 255],\n    \n    cyan:         [0,   153, 255],\n    lightCyan:    [0,   204, 255],\n}\n\n/*  ------------------------------------------------------------------------ */\n\nmodule.exports = Colors\n\n/*  ------------------------------------------------------------------------ */\n\n","import init, * as modus from '../pkg/modus_playground.js';\nimport ansi from \"ansicolor\"\n\nlet query = null;\nlet init_done = false;\n\nself.onmessage = function ({ data }) {\n  query = data;\n  if (init_done) {\n    process();\n  }\n};\n\nfunction process() {\n  if (query === null) {\n    return;\n  }\n  let res_text = [];\n  let proof_tree;\n  let query_id = query.query_id;\n  try {\n    proof_tree = modus.get_proof_tree(query.modusfile, query.query);\n  } catch (e) {\n    proof_tree = null;\n    res_text.push(e.toString());\n  }\n  if (proof_tree) {\n    let errors = proof_tree.get_errors;\n    if (errors.trim().length > 0) {\n      res_text.push(errors);\n    }\n    if (proof_tree.success) {\n      for (let proof of proof_tree.get_proofs) {\n        res_text.push(proof);\n      }\n    } else {\n      res_text.push(\"Failed to generate proof.\");\n    }\n  }\n  res_text = res_text.join(\"\\n\");\n  postMessage({\n    query_id, res: ansi.parse(res_text)\n  });\n  query = null;\n}\n\ninit().then(() => {\n  process();\n  init_done = true;\n});\n"],"names":["$412e3b101f3823a4$var$wasm","$8831245f07480bee$export$6503ec6e8aabbaf","$8831245f07480bee$export$f7ad0328861e2f03","$8831245f07480bee$var$mapping","pairs","keys","Object","i","length","id","resolved","Error","$01a32f7bf710fe19$export$bdfd709ae4826697","$01a32f7bf710fe19$var$bundleURL","$01a32f7bf710fe19$var$getBaseURL","url","replace","value","err","matches","stack","match","$01a32f7bf710fe19$var$getBundleURL","parcelRequire","register","JSON","parse","$412e3b101f3823a4$var$cachedTextDecoder","TextDecoder","ignoreBOM","fatal","decode","$412e3b101f3823a4$var$cachegetUint8Memory0","$412e3b101f3823a4$var$getUint8Memory0","buffer","memory","Uint8Array","$412e3b101f3823a4$var$getStringFromWasm0","ptr","len","subarray","$412e3b101f3823a4$var$heap","Array","fill","undefined","push","$412e3b101f3823a4$var$heap_next","$412e3b101f3823a4$var$cachegetInt32Memory0","$412e3b101f3823a4$var$getInt32Memory0","Int32Array","$412e3b101f3823a4$var$cachegetUint32Memory0","$412e3b101f3823a4$var$takeObject","idx","ret","$412e3b101f3823a4$var$getObject","$412e3b101f3823a4$var$dropObject","$412e3b101f3823a4$var$getArrayJsValueFromWasm0","slice","Uint32Array","result","$412e3b101f3823a4$var$WASM_VECTOR_LEN","$412e3b101f3823a4$var$cachedTextEncoder","TextEncoder","$412e3b101f3823a4$var$encodeString","encodeInto","arg","view","buf","encode","set","read","written","$412e3b101f3823a4$var$passStringToWasm0","malloc","realloc","mem","offset","code","charCodeAt","$412e3b101f3823a4$export$d29ba6c36fdb7856","obj","create","prototype","__destroy_into_raw","this","free","__wbg_modusresult_free","success","__wbg_get_modusresult_success","arg0","__wbg_set_modusresult_success","get_errors","retptr","__wbindgen_add_to_stack_pointer","modusresult_get_errors","r0","r1","__wbindgen_free","get_proofs","modusresult_get_proofs","v0","$cb806155d39840de$exports","getBundleURL","resolve","$412e3b101f3823a4$export$2e2bcd8739ae039","$412e3b101f3823a4$var$init","input","URL","imports","wbg","__wbindgen_string_new","arg1","$412e3b101f3823a4$var$addHeapObject","__wbindgen_throw","Request","fetch","instance","module","Response","WebAssembly","instantiateStreaming","e","headers","get","console","warn","bytes","arrayBuffer","instantiate","Instance","$412e3b101f3823a4$var$load","exports","__wbindgen_wasm_module","$e5f922b373de4a45$var$O","$e5f922b373de4a45$var$colorCodes","$e5f922b373de4a45$var$colorCodesLight","$e5f922b373de4a45$var$styleCodes","$e5f922b373de4a45$var$asBright","red","green","yellow","blue","magenta","cyan","black","lightGray","$e5f922b373de4a45$var$types","$e5f922b373de4a45$var$subtypes","color","colorLight","bgColor","bgColorLight","style","unstyle","$e5f922b373de4a45$var$clean","k","$e5f922b373de4a45$var$Color","Color","background","name","brightness","$e5f922b373de4a45$var$_classCallCheck","inverted","inverse","rgbName","$e5f922b373de4a45$var$Code","bright","prop","rgb","$e5f922b373de4a45$var$Colors","alpha","dim","concat","$e5f922b373de4a45$var$_toConsumableArray","join","Code","n","Number","Math","floor","type","noBrightness","x","str","assign","reset","noItalic","noUnderline","noInverse","noColor","noBgColor","$e5f922b373de4a45$var$wrap","openCode","closeCode","open","close","String","split","map","line","s","$e5f922b373de4a45$var$denormalizeBrightness","a","b","$e5f922b373de4a45$var$camel","charAt","toUpperCase","$e5f922b373de4a45$var$stringWrappingMethods","reduce","Colors","spans","state","text","codes","c","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","_code","return","$e5f922b373de4a45$var$rawParse","key","p","styles","Set","span","has","underline","italic","bold","foreColor","defaultBrightness","styledSpan","css","clean","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","isBrightness","subtype","add","delete","filter","parsed","asChromeConsoleLogArguments","strip","names","forEach","defineProperty","assignStringWrappingAPI","target","wrapBefore","arguments","memo","_ref","_ref2","$e5f922b373de4a45$var$_slicedToArray","$e5f922b373de4a45$var$assignStringWrappingAPI","_ref3","darkGray","white","lightRed","lightGreen","lightYellow","lightBlue","lightMagenta","lightCyan","$e5f922b373de4a45$exports","$a6871ad958ce783e$var$query","$a6871ad958ce783e$var$init_done","$a6871ad958ce783e$var$process","proof_tree","res_text","query_id","mf_source","modusfile","goal","query","ptr0","__wbindgen_malloc","__wbindgen_realloc","len0","ptr1","len1","get_proof_tree","__wrap","toString","errors","trim","proof","postMessage","res","$parcel$interopDefault","self","onmessage","data","then"],"version":3,"file":"worker.02e2ac62.js.map"}